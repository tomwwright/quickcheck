import {
  attribute as DynamoAttribute,
  autoGeneratedHashKey as DynamoAutoGeneratedHashKey,
  table as DynamoTable
} from "@aws/dynamodb-data-mapper-annotations";
import {
  ObjectType as GraphQLObjectType,
  InputType as GraphQLInputType,
  Field as GraphQLField,
  Int as GraphQLInt
} from "type-graphql";
import * as GraphQLJSON from "graphql-type-json";
import { GraphQLDateTime } from "graphql-iso-date";
import { Result as ResultType } from "quickcheck";
import { Notification } from "./Notification";
import { Request } from "./Request";

@DynamoTable("Results")
@GraphQLObjectType()
@GraphQLInputType("ResultInput")
export class Result implements ResultType {
  @DynamoAutoGeneratedHashKey()
  @GraphQLField({ nullable: true })
  resultId?: string;

  @DynamoAttribute()
  @GraphQLField()
  checkId: string;

  @DynamoAttribute()
  @GraphQLField(type => Request)
  request: Request;

  @DynamoAttribute()
  @GraphQLField(type => GraphQLDateTime)
  datetime: string;

  @DynamoAttribute()
  @GraphQLField(type => GraphQLInt)
  elapsedMillis: number;

  @DynamoAttribute()
  @GraphQLField(type => GraphQLInt, { nullable: true })
  statusCode?: number;

  @DynamoAttribute()
  @GraphQLField(type => GraphQLJSON, { nullable: true })
  responseHeaders?: { [key: string]: string };

  @DynamoAttribute()
  @GraphQLField({ nullable: true })
  body?: string;

  @DynamoAttribute()
  @GraphQLField()
  message: string;

  @DynamoAttribute()
  @GraphQLField(type => [Notification])
  sentNotifications: Notification[];
}
